include "browser.imp"

namespace bloom {

	abstract class Response {
		objects:any[]
	}

	abstract class User {
		username:string
	}

  class Garden {
    static vineyard_url:string = 'http://localhost:3000/'

    static start() {
      var $injector = angular.injector(['ng'])
      window.$q = $injector.get('$q')

      query({
        "trellis": "user",
        "filters": [
        {
          "path": "id",
          "value": "user",
          "type": "parameter"
        }
        ],
        "version": "1.0.0.browser"
      })
      .then((response:bloom.Response)=> {
        var user:User = response.objects.get(0)
        if (user.username == 'anonymous') {
          Garden.goto('garden-login')
        }
        else {
          Garden.goto('garden-hub')
        }
      })
    }
	
    static goto(name) {
      $('.current-page').remove()
      var new_page = $('<' + name + '/>')
      new_page.addClass('current-page')
      new_page.insertAfter($('header'))
    }

	  static query(data):browser.Promise {
		  return Garden.post('vineyard/query', data)
	  }
	  
  static post(path, data) {
    return http('POST', path, data)
  }

  static get(path) {
    return http('GET', path)
  }

  static http(method, path, data = null) {
    var def = $q.defer()
    var options = {
      method: method,
      contentType: 'application/json',
      crossDomain: true,
      xhrFields: {
        withCredentials: true
      },
      data: JSON.stringify(data),
      dataType: 'json',
      success: (response)=> {
        def.resolve(response)
      }
    }

    jQuery.ajax	(Garden.vineyard_url + path, options)

    return def.promise
  }
  }
}